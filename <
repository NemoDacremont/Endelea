extends Node

# Count the dashes used, one dash is available till you touch floor or wall
static var dash_counter: int = 0

static var dash_time: float = 0
static var dash_speed: float = 0

# On trigger, dash_direction is defined and usable in other nodes
var dash_direction: Vector2 = Vector2.UP


enum Dash_State {PRE_DASH, DASHING, NONE, DASH_STATES_COUNT}
static var dash_state: Dash_State = Dash_State.NONE

@onready var state_machine: Node = get_parent()
@onready var pre_dash: Node = $PreDash
@onready var dashing: Node = $Dashing
@onready var idle: Node = $Idle  # shouldn't be used, but to be sure


func is_triggered(player: CharacterBody2D) -> bool:
	return Input.is_action_just_pressed(PlayerConstants.DASH_ACTION_NAME)

	return false


func start():
	dash_state = Dash_State.PRE_DASH


func get_to_next_state():
	if dash_state == Dash_State.PRE_DASH:
		dash_state = Dash_State.DASHING

	elif dash_state == Dash_State.DASHING:
		state_machine.state = state_machine.States.IDLE
		dash_state = Dash_State.NONE

	elif dash_state == Dash_State.NONE:  # ??
		dash_state = Dash_State.PRE_DASH



func capture_inputs():
	pass


func physics_process(delta: float, player: CharacterBody2D):
	capture_inputs()

	match (dash_state):
		Dash_State.PRE_DASH:
			pre_dash.physics_process(delta, player)
			pass

		Dash_State.DASHING:
			dashing.physics_process(delta, player)
			pass

		Dash_State.NONE:  # isn't supposed to happen
			pass


# Called every frame. 'delta' is the elapsed time since the previous frame.
func process(_delta: float, _player: CharacterBody2D):

	match (dash_state):
		Dash_State.PRE_DASH:
			pass

		Dash_State.DASHING:
			pass

		Dash_State.NONE:  # isn't supposed to happen
			print("Dash is in NONE state, shouldn't be possible")






